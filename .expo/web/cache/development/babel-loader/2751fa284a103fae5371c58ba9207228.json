{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/icheka/Work/Personal Projects/React Native/Always On Music Streaming Service/components/Player/cores/trackinfo.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { globalStyle } from \"../../../assets/global.style\";\nimport Card from \"../../shared/card\";\n\nvar TrackInfo = function (_Component) {\n  _inherits(TrackInfo, _Component);\n\n  var _super = _createSuper(TrackInfo);\n\n  function TrackInfo(props) {\n    _classCallCheck(this, TrackInfo);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(TrackInfo, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Card, {\n        style: globalStyle.trackInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.song,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }\n      }, this.props.track.song), React.createElement(View, {\n        style: _objectSpread(_objectSpread({}, globalStyle.separator), styles.separator),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }\n      }), React.createElement(Text, {\n        style: styles.artiste,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }, this.props.track.artiste));\n    }\n  }]);\n\n  return TrackInfo;\n}(Component);\n\nexport { TrackInfo as default };\nvar styles = StyleSheet.create({\n  song: {\n    fontSize: 26,\n    color: 'white',\n    fontWeight: '500',\n    textAlign: 'center',\n    marginBottom: 6\n  },\n  artiste: {\n    fontSize: 22,\n    color: 'red',\n    textAlign: \"center\",\n    marginTop: 6,\n    padding: 3,\n    borderRadius: 10,\n    marginHorizontal: -5\n  },\n  separator: {\n    width: 70\n  }\n});","map":{"version":3,"sources":["/home/icheka/Work/Personal Projects/React Native/Always On Music Streaming Service/components/Player/cores/trackinfo.jsx"],"names":["StatusBar","React","Component","globalStyle","Card","TrackInfo","props","trackInfo","styles","song","track","separator","artiste","StyleSheet","create","fontSize","color","fontWeight","textAlign","marginBottom","marginTop","padding","borderRadius","marginHorizontal","width"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,SAASC,WAAT;AACA,OAAOC,IAAP;;IAEqBC,S;;;;;AACjB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACTA,KADS;AAElB;;;;6BACQ;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAGH,WAAW,CAACI,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2B,KAAKH,KAAL,CAAWI,KAAX,CAAiBD,IAA5C,CADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,kCAEAN,WAAW,CAACQ,SAFZ,GAE0BH,MAAM,CAACG,SAFjC,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAOI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8B,KAAKN,KAAL,CAAWI,KAAX,CAAiBE,OAA/C,CAPJ,CADJ;AAWH;;;;EAhBkCV,S;;SAAlBG,S;AAmBrB,IAAMG,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,IAAI,EAAE;AACFM,IAAAA,QAAQ,EAAE,EADR;AAEFC,IAAAA,KAAK,EAAE,OAFL;AAGFC,IAAAA,UAAU,EAAE,KAHV;AAIFC,IAAAA,SAAS,EAAE,QAJT;AAKFC,IAAAA,YAAY,EAAE;AALZ,GADuB;AAQ7BP,EAAAA,OAAO,EAAE;AACLG,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,KAAK,EAAE,KAFF;AAGLE,IAAAA,SAAS,EAAE,QAHN;AAILE,IAAAA,SAAS,EAAE,CAJN;AAKLC,IAAAA,OAAO,EAAE,CALJ;AAMLC,IAAAA,YAAY,EAAE,EANT;AAOLC,IAAAA,gBAAgB,EAAE,CAAC;AAPd,GARoB;AAiB7BZ,EAAAA,SAAS,EAAE;AACPa,IAAAA,KAAK,EAAE;AADA;AAjBkB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { globalStyle } from '../../../assets/global.style';\nimport Card from '../../shared/card';\n\nexport default class TrackInfo extends Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <Card style={ globalStyle.trackInfo }>\n                <Text style={styles.song}>{this.props.track.song}</Text>\n                <View style={\n                    {\n                        ...globalStyle.separator, ...styles.separator\n                    }\n                }></View>\n                <Text style={styles.artiste}>{this.props.track.artiste}</Text>\n            </Card>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    song: {\n        fontSize: 26,\n        color: 'white',\n        fontWeight: '500',\n        textAlign: 'center',\n        marginBottom: 6\n    },\n    artiste: {\n        fontSize: 22,\n        color: 'red',\n        textAlign: \"center\",\n        marginTop: 6,\n        padding: 3,\n        borderRadius: 10,\n        marginHorizontal: -5\n    },\n    separator: {\n        width: 70\n    }\n})"]},"metadata":{},"sourceType":"module"}
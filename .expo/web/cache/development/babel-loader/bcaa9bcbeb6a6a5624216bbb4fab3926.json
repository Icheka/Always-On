{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/icheka/Work/Personal Projects/React Native/Always On Music Streaming Service/components/Player/cores/trackinfo.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { globalStyle } from \"../../../assets/global.style\";\nimport Card from \"../../shared/card\";\n\nvar TrackInfo = function (_Component) {\n  _inherits(TrackInfo, _Component);\n\n  var _super = _createSuper(TrackInfo);\n\n  function TrackInfo(props) {\n    _classCallCheck(this, TrackInfo);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(TrackInfo, [{\n    key: \"render\",\n    value: function render() {\n      var width = Dimensions.get('window').width;\n      return React.createElement(Card, {\n        style: globalStyle.trackInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.song,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }\n      }, this.props.track.song), React.createElement(Text, {\n        style: styles.artiste,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }\n      }, this.props.track.artiste));\n    }\n  }]);\n\n  return TrackInfo;\n}(Component);\n\nexport { TrackInfo as default };\nvar styles = StyleSheet.create({\n  song: {\n    fontSize: 26,\n    color: 'black',\n    fontWeight: '500',\n    textAlign: 'center'\n  },\n  artiste: {\n    fontSize: 22,\n    color: '#333',\n    textAlign: \"center\",\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["/home/icheka/Work/Personal Projects/React Native/Always On Music Streaming Service/components/Player/cores/trackinfo.jsx"],"names":["StatusBar","React","Component","globalStyle","Card","TrackInfo","props","width","Dimensions","get","trackInfo","styles","song","track","artiste","StyleSheet","create","fontSize","color","fontWeight","textAlign","marginTop"],"mappings":";;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAEA,SAASC,WAAT;AACA,OAAOC,IAAP;;IAEqBC,S;;;;;AACjB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACTA,KADS;AAElB;;;;6BACQ;AACL,UAAIC,KAAK,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAArC;AACA,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAGJ,WAAW,CAACO,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2B,KAAKN,KAAL,CAAWO,KAAX,CAAiBD,IAA5C,CADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACG,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8B,KAAKR,KAAL,CAAWO,KAAX,CAAiBC,OAA/C,CAFJ,CADJ;AAMH;;;;EAZkCZ,S;;SAAlBG,S;AAerB,IAAMM,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,IAAI,EAAE;AACFK,IAAAA,QAAQ,EAAE,EADR;AAEFC,IAAAA,KAAK,EAAE,OAFL;AAGFC,IAAAA,UAAU,EAAE,KAHV;AAIFC,IAAAA,SAAS,EAAE;AAJT,GADuB;AAQ7BN,EAAAA,OAAO,EAAE;AACLG,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,KAAK,EAAE,MAFF;AAGLE,IAAAA,SAAS,EAAE,QAHN;AAILC,IAAAA,SAAS,EAAE;AAJN;AARoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { Component } from 'react';\nimport { StyleSheet, Text, TouchableOpacity, Image, Dimensions } from 'react-native';\nimport { globalStyle } from '../../../assets/global.style';\nimport Card from '../../shared/card';\n\nexport default class TrackInfo extends Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        let width = Dimensions.get('window').width;\n        return (\n            <Card style={ globalStyle.trackInfo }>\n                <Text style={styles.song}>{this.props.track.song}</Text>\n                <Text style={styles.artiste}>{this.props.track.artiste}</Text>\n            </Card>\n        );\n    }\n}\n\nconst styles = StyleSheet.create({\n    song: {\n        fontSize: 26,\n        color: 'black',\n        fontWeight: '500',\n        textAlign: 'center',\n        \n    },\n    artiste: {\n        fontSize: 22,\n        color: '#333',\n        textAlign: \"center\",\n        marginTop: 10\n    }\n})"]},"metadata":{},"sourceType":"module"}